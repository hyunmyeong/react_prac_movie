1. JSX

=> JavaScript를 확장한 문법

2. useState

=> const [state, setState] = React.useState(state의 초기값);

set : state
setState : state를 변경할 함수

state가 바뀌면 렌더링이 된다.


3. setState((current) => current + 1);

=> const [counter, setCounter] = React.useState(0);
            const onClick = () => {

                //직접 값을 입력
                setCounter(counter+ 1);

                // 현재 state를 바탕으로 다음 state를 계산할 때 (함수로 입력)
                setCounter((current) => current + 1);


4. memo

=> 바뀌지 않은 값은 저장해서 리랜더링이 생기지 않도록
=> 랜더링으로 느려질 수 있으므로


5.useEffect(한번만 실행하고 싶은 코드, [])

=> component가 처음 render될 때 실행, 다시 실행 X
=> 코드가 한번만 실행될 수 있도록!

+ useEffect(실행할 코드, [특정 값])
=> 특정 값이 바뀔 때 마다 코드가 실행됨